[{"C:\\Users\\Moback\\Desktop\\react-chat\\src\\App.js":"1","C:\\Users\\Moback\\Desktop\\react-chat\\src\\reportWebVitals.js":"2","C:\\Users\\Moback\\Desktop\\react-chat\\src\\index.js":"3"},{"size":3575,"mtime":1612270727786,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1610867414078,"results":"6","hashOfConfig":"5"},{"size":500,"mtime":1610867414078,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"xeprw8",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Moback\\Desktop\\react-chat\\src\\App.js",["15"],"import React from \"react\";\nimport { useRef, useState } from \"react\";\nimport \"./App.css\";\n\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyARJGxiyIUFDyJr-MpNKvzw-wI350eYXfU\",\n  authDomain: \"react-chat-bb0a1.firebaseapp.com\",\n  projectId: \"react-chat-bb0a1\",\n  storageBucket: \"react-chat-bb0a1.appspot.com\",\n  messagingSenderId: \"328047872648\",\n  appId: \"1:328047872648:web:6f011653f9f50720e8ed3d\",\n  measurementId: \"G-YQG4Y44M0H\",\n});\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\nconst SignIn = () => {\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  };\n  return <button onClick={signInWithGoogle}>Sign In with Google</button>;\n};\n\n// const signOut = () => {\n//   return (\n//     auth.currentUser && <button onClick={() => auth.signOut()}>Sign Out</button>\n//   );\n// };\n\nconst ChatMessage = (props) => {\n  const { text, uid, photoURL, createdAt, displayName } = props.message;\n  const messageClass = uid === auth.currentUser.uid ? \"sent\" : \"received\";\n  const date =\n    createdAt && createdAt.seconds ? new Date(createdAt.seconds * 1000) : \"\";\n  return (\n    <div className={`message ${messageClass}`}>\n      <figure className=\"figure\">\n        <img src={photoURL} />\n      </figure>\n      <div className=\"message__wrapper\">\n        <span className=\"message__name\">{displayName}</span>\n        <p>{text}</p>\n        <span className=\"message__time\">{createdAt && createdAt.seconds\n          ? `${date.getHours()}:${date.getMinutes()}`\n          : \"\"}</span>\n      </div>\n    </div>\n  );\n};\n\nconst ChatRoom = () => {\n  const dummy = useRef();\n  const messagesRef = firestore.collection(\"messages\");\n  const query = messagesRef.orderBy(\"createdAt\").limit(2500);\n  const [messages] = useCollectionData(query, { idField: \"id\" });\n  const [formValue, setFormValue] = useState(\"\");\n  const sendMessage = async (e) => {\n    if (formValue !== \"\") {\n      e.preventDefault();\n      const { uid, photoURL, displayName } = auth.currentUser;\n      console.log(auth.currentUser);\n\n      await messagesRef.add({\n        text: formValue,\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n        uid,\n        photoURL,\n        displayName,\n      });\n\n      setFormValue(\"\");\n      dummy.current.scrollIntoView({ behavior: \"smooth\" });\n    }\n  };\n\n  return (\n    <>\n      <div>\n        {messages &&\n          messages.map((msg) => <ChatMessage key={msg.id} message={msg} />)}\n        <div ref={dummy}></div>\n      </div>\n\n      <form className=\"submit__wrapper\" onSubmit={sendMessage}>\n        <input\n          className=\"submit__input\"\n          value={formValue}\n          onChange={(e) => {\n            setFormValue(e.target.value);\n          }}\n        />\n        <button type=\"submit\" className={formValue === \"\" ? 'submit disabled': 'submit'}>send</button>\n      </form>\n    </>\n  );\n};\n\nconst App = () => {\n  // return <div className=\"App\">React To DO</div>;\n\n  const [user] = useAuthState(auth);\n  return (\n    <div className=\"App\">\n      <header className=\"chatroom\">Dhaniya Chat</header>\n      <section\n        style={{\n          background: \"#fddd96\",\n          boxShadow: \"inset -1px -8px 14px 6px rgb(0 0 0 / 20%)\",\n        }}\n      >\n        {user ? <ChatRoom /> : <SignIn />}\n      </section>\n    </div>\n  );\n};\n\nexport default App;\n","C:\\Users\\Moback\\Desktop\\react-chat\\src\\reportWebVitals.js",[],"C:\\Users\\Moback\\Desktop\\react-chat\\src\\index.js",[],{"ruleId":"16","severity":1,"message":"17","line":47,"column":9,"nodeType":"18","endLine":47,"endColumn":31},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]